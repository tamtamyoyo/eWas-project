import { useState, useEffect } from "react";
import { useTranslation } from "react-i18next";
import { useLocation } from "wouter";
import { Card, CardContent } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Button } from "@/components/ui/button";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Link } from "wouter";
import ConnectedPlatforms from "@/components/dashboard/ConnectedPlatforms";
import { useIsMobile } from "@/hooks/use-mobile";
import PostSchedule from "@/components/dashboard/PostSchedule";
import { useQuery } from "@tanstack/react-query";
import { type Post, type SocialAccount } from "@shared/schema";

// Interface imports from component files
interface PlatformStats {
  platform: 'facebook' | 'twitter' | 'instagram';
  posts: number;
  audience: number;
  totalLikes: number;
  followers: number;
  growth: number;
}

interface PlatformInsight {
  platform: 'instagram' | 'facebook' | 'twitter';
  posts: number;
  audience: number;
  totalLikes: number;
  followers: number;
}

interface ScheduledPost {
  id: string;
  platform: 'instagram' | 'facebook' | 'twitter';
  content: string;
  images?: string[];
  time: string;
}

// Sample data for charts
const followersData = [
  { date: '03/30', followers: 253 },
  { date: '03/31', followers: 255 },
  { date: '04/01', followers: 256 },
  { date: '04/02', followers: 256 },
  { date: '04/03', followers: 257 },
  { date: '04/04', followers: 257 },
  { date: '04/05', followers: 257 },
];

const impressionsData = [
  { date: '03/30', impressions: 120 },
  { date: '03/31', impressions: 115 },
  { date: '04/01', impressions: 110 },
  { date: '04/02', impressions: 105 },
  { date: '04/03', impressions: 95 },
  { date: '04/04', impressions: 85 },
  { date: '04/05', impressions: 73 },
];

const reachData = [
  { date: '03/30', reach: 85 },
  { date: '03/31', reach: 82 },
  { date: '04/01', reach: 80 },
  { date: '04/02', reach: 78 },
  { date: '04/03', reach: 76 },
  { date: '04/04', reach: 75 },
  { date: '04/05', reach: 73 },
];

// Sample top posts data
const topPosts = [
  { 
    id: 1, 
    image: 'https://placehold.co/100x100/3b82f6/white?text=Post+1', 
    engagement: 142.9, 
    likes: 16, 
    comments: 2 
  },
  { 
    id: 2, 
    image: 'https://placehold.co/100x100/3b82f6/white?text=Post+2', 
    engagement: 92.8, 
    likes: 10, 
    comments: 0 
  },
  { 
    id: 3, 
    image: 'https://placehold.co/100x100/3b82f6/white?text=Post+3', 
    engagement: 83.7, 
    likes: 18, 
    comments: 1 
  },
  { 
    id: 4, 
    image: 'https://placehold.co/100x100/3b82f6/white?text=Post+4', 
    engagement: 81.1, 
    likes: 8, 
    comments: 3 
  },
  { 
    id: 5, 
    image: 'https://placehold.co/100x100/3b82f6/white?text=Post+5', 
    engagement: 80.2, 
    likes: 10, 
    comments: 0 
  },
];

function ProfileSummary() {
  const { t } = useTranslation();
  
  return (
    <Card>
      <CardContent className="p-6">
        <h2 className="text-xl font-medium mb-4">{t('dashboard.profileSummary')}</h2>
        <div className="grid grid-cols-3 gap-6 text-center">
          <div className="flex flex-col">
            <span className="text-2xl font-bold">19</span>
            <span className="text-sm text-gray-500">{t('dashboard.totalPosts')}</span>
          </div>
          <div className="flex flex-col">
            <span className="text-2xl font-bold">257</span>
            <span className="text-sm text-gray-500">{t('dashboard.followers')}</span>
          </div>
          <div className="flex flex-col">
            <span className="text-2xl font-bold">20</span>
            <span className="text-sm text-gray-500">{t('dashboard.following')}</span>
          </div>
        </div>

        <div className="mt-4 border border-gray-100 rounded-md p-3">
          <div className="flex items-center mb-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="mr-2">
              <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"></path>
              <circle cx="9" cy="7" r="4"></circle>
              <path d="M22 21v-2a4 4 0 0 0-3-3.87"></path>
              <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
            </svg>
            <span className="font-medium">{t('dashboard.performanceReport')}</span>
          </div>
          <p className="text-sm text-gray-500">{t('dashboard.shareReportDescription')}</p>
          
          <Button variant="outline" size="sm" className="mt-2 w-full justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="mr-2">
              <path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"></path>
              <polyline points="16 6 12 2 8 6"></polyline>
              <line x1="12" y1="2" x2="12" y2="15"></line>
            </svg>
            {t('dashboard.shareReport')}
          </Button>
        </div>
      </CardContent>
    </Card>
  );
}

function ProfileGrowthSection() {
  const { t } = useTranslation();
  const [dateRange, setDateRange] = useState("7");
  
  return (
    <Card className="mb-8">
      <CardContent className="p-6">
        <div className="flex flex-col md:flex-row justify-between items-start md:items-center mb-4">
          <h2 className="text-xl font-medium">{t('dashboard.profileGrowth')}</h2>
          
          <div className="flex mt-2 md:mt-0 flex-wrap gap-2">
            <div className="flex items-center text-sm mr-4">
              <div className="flex items-center mr-2">
                <input
                  type="radio"
                  id="collected-data"
                  name="data-type"
                  className="mr-1.5"
                  defaultChecked
                />
                <label htmlFor="collected-data">{t('dashboard.collectedData')}</label>
              </div>
              
              <div className="flex items-center">
                <input
                  type="radio"
                  id="no-data"
                  name="data-type"
                  className="mr-1.5"
                />
                <label htmlFor="no-data">{t('dashboard.noData')}</label>
              </div>
            </div>
            
            <Select value={dateRange} onValueChange={setDateRange}>
              <SelectTrigger className="w-[160px] text-sm h-8">
                <SelectValue placeholder={t('dashboard.selectDateRange')} />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="7">{t('dashboard.last7Days')}</SelectItem>
                <SelectItem value="30">{t('dashboard.last30Days')}</SelectItem>
                <SelectItem value="90">{t('dashboard.last90Days')}</SelectItem>
              </SelectContent>
            </Select>
            
            <Button variant="outline" size="sm">
              {t('dashboard.exportCSV')}
            </Button>
          </div>
        </div>
        
        {/* Followers section */}
        <div className="mb-6">
          <div className="flex justify-between items-center mb-2">
            <h3 className="font-medium uppercase text-sm text-gray-500">
              {t('dashboard.followers')}
            </h3>
            <div className="flex items-center gap-4">
              <div className="text-right">
                <div className="font-bold">257</div>
                <div className="text-sm text-gray-500">{t('dashboard.followers')}</div>
              </div>
              <div className="text-right">
                <div className="font-bold text-green-500">5</div>
                <div className="text-sm text-gray-500">{t('dashboard.growth')}</div>
              </div>
              <div className="text-right">
                <div className="font-bold text-green-500">1.98%</div>
                <div className="text-sm text-gray-500">{t('dashboard.growthRate')}</div>
              </div>
            </div>
          </div>
          
          <div className="h-[180px] w-full">
            <ResponsiveContainer width="100%" height="100%">
              <LineChart data={followersData} margin={{ top: 5, right: 30, left: 10, bottom: 5 }}>
                <CartesianGrid strokeDasharray="3 3" vertical={false} stroke="#f0f0f0" />
                <XAxis 
                  dataKey="date" 
                  axisLine={false}
                  tickLine={false}
                  tick={{ fontSize: 12 }} 
                />
                <YAxis 
                  axisLine={false}
                  tickLine={false}
                  tick={{ fontSize: 12 }}
                  domain={['dataMin - 5', 'dataMax + 5']} 
                />
                <Tooltip />
                <Line 
                  type="monotone" 
                  dataKey="followers" 
                  stroke="#3B82F6" 
                  strokeWidth={2}
                  dot={{ r: 4, fill: "#3B82F6" }}
                  activeDot={{ r: 6 }}
                />
              </LineChart>
            </ResponsiveContainer>
          </div>
        </div>
        
        {/* Impressions section */}
        <div className="mb-6">
          <div className="flex justify-between items-center mb-2">
            <h3 className="font-medium uppercase text-sm text-gray-500">
              {t('dashboard.impressions')}
            </h3>
            <div className="text-right">
              <div className="font-bold">761</div>
              <div className="text-sm text-gray-500">{t('dashboard.impressions')}</div>
            </div>
          </div>
          
          <div className="h-[180px] w-full">
            <ResponsiveContainer width="100%" height="100%">
              <LineChart data={impressionsData} margin={{ top: 5, right: 30, left: 10, bottom: 5 }}>
                <CartesianGrid strokeDasharray="3 3" vertical={false} stroke="#f0f0f0" />
                <XAxis 
                  dataKey="date" 
                  axisLine={false}
                  tickLine={false}
                  tick={{ fontSize: 12 }} 
                />
                <YAxis 
                  axisLine={false}
                  tickLine={false}
                  tick={{ fontSize: 12 }}
                  domain={['dataMin - 10', 'dataMax + 10']} 
                />
                <Tooltip />
                <Line 
                  type="monotone" 
                  dataKey="impressions" 
                  stroke="#3B82F6" 
                  strokeWidth={2}
                  dot={{ r: 4, fill: "#3B82F6" }}
                  activeDot={{ r: 6 }}
                />
              </LineChart>
            </ResponsiveContainer>
          </div>
        </div>
        
        {/* Reach section */}
        <div>
          <div className="flex justify-between items-center mb-2">
            <h3 className="font-medium uppercase text-sm text-gray-500">
              {t('dashboard.reach')}
            </h3>
            <div className="text-right">
              <div className="font-bold">73</div>
              <div className="text-sm text-gray-500">{t('dashboard.avgReach')}</div>
            </div>
          </div>
          
          <div className="h-[180px] w-full">
            <ResponsiveContainer width="100%" height="100%">
              <LineChart data={reachData} margin={{ top: 5, right: 30, left: 10, bottom: 5 }}>
                <CartesianGrid strokeDasharray="3 3" vertical={false} stroke="#f0f0f0" />
                <XAxis 
                  dataKey="date" 
                  axisLine={false}
                  tickLine={false}
                  tick={{ fontSize: 12 }} 
                />
                <YAxis 
                  axisLine={false}
                  tickLine={false}
                  tick={{ fontSize: 12 }}
                  domain={['dataMin - 5', 'dataMax + 5']} 
                />
                <Tooltip />
                <Line 
                  type="monotone" 
                  dataKey="reach" 
                  stroke="#3B82F6" 
                  strokeWidth={2}
                  dot={{ r: 4, fill: "#3B82F6" }}
                  activeDot={{ r: 6 }}
                />
              </LineChart>
            </ResponsiveContainer>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}

function TopPerformingPosts() {
  const { t } = useTranslation();
  
  return (
    <Card className="mb-8">
      <CardContent className="p-6">
        <h2 className="text-xl font-medium mb-4">{t('dashboard.bestPerformingPosts')}</h2>
        
        <div className="text-sm text-gray-500 mb-4">
          <div className="flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="mr-2">
              <circle cx="12" cy="12" r="10"></circle>
              <line x1="12" y1="16" x2="12" y2="12"></line>
              <line x1="12" y1="8" x2="12.01" y2="8"></line>
            </svg>
            {t('dashboard.topPostsDescription')}
          </div>
        </div>
        
        <div className="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4">
          {topPosts.map(post => (
            <div key={post.id} className="border rounded overflow-hidden bg-white">
              <div className="w-full aspect-square bg-blue-500">
                <img src={post.image} alt="Post" className="w-full h-full object-cover" />
              </div>
              <div className="p-3">
                <div className="text-xs text-gray-500 uppercase mb-1">
                  {t('dashboard.engagement')}
                </div>
                <div className="font-bold text-sm">
                  {post.engagement.toFixed(1)}%
                </div>
                <div className="flex justify-between mt-2 text-sm">
                  <div className="flex items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="mr-1">
                      <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                    </svg>
                    <span>{post.likes}</span>
                  </div>
                  <div className="flex items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="mr-1">
                      <path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"></path>
                    </svg>
                    <span>{post.comments}</span>
                  </div>
                  <div className="text-gray-500">
                    {t('dashboard.nA')}
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </CardContent>
    </Card>
  );
}

function AnalyticsTabs() {
  const { t } = useTranslation();
  const isMobile = useIsMobile();
  const [activeTab, setActiveTab] = useState("overview");
  
  // Sample data for new components
  const statsData = {
    userEngagement: 2541,
    userEngagementChange: 12.5,
    userEngagementToday: 82,
    trafficSources: 18,
    trafficSourcesChange: 3.2,
    trafficSourcesToday: 5,
    audienceGrowth: 13726,
    audienceGrowthChange: 4.8,
    audienceGrowthToday: 213,
    contentPerformance: 87,
    contentPerformanceChange: -2.4,
    contentPerformanceToday: -11
  };
  
  const platformInsights: PlatformInsight[] = [
    {
      platform: 'instagram' as const,
      posts: 36,
      audience: 8574,
      totalLikes: 3249,
      followers: 189
    },
    {
      platform: 'facebook' as const,
      posts: 22,
      audience: 3210,
      totalLikes: 1843,
      followers: 56
    },
    {
      platform: 'twitter' as const,
      posts: 18,
      audience: 1942,
      totalLikes: 1026,
      followers: 42
    }
  ];
  
  const platformStats: PlatformStats[] = [
    {
      platform: 'instagram' as const,
      posts: 36,
      audience: 8574,
      totalLikes: 3249,
      followers: 189,
      growth: 4.8
    },
    {
      platform: 'facebook' as const,
      posts: 22,
      audience: 3210,
      totalLikes: 1843,
      followers: 56,
      growth: 2.1
    },
    {
      platform: 'twitter' as const,
      posts: 18,
      audience: 1942,
      totalLikes: 1026,
      followers: 42,
      growth: 3.6
    }
  ];

  const scheduledPosts: Record<string, ScheduledPost[]> = {
    "19": [
      {
        id: "post1",
        platform: 'instagram' as const,
        content: "Check out our new spring collection! #fashion #springcollection #newarrivals",
        images: ["https://placehold.co/100x100/3b82f6/white?text=Spring+1"],
        time: "12:00"
      },
      {
        id: "post2",
        platform: 'facebook' as const,
        content: "New arrivals just hit the shelves! Come visit our store today to see the latest fashion trends for spring 2024.",
        images: ["https://placehold.co/100x100/3b82f6/white?text=Spring+2"],
        time: "17:00"
      }
    ],
    "20": [
      {
        id: "post3",
        platform: 'twitter' as const,
        content: "Spring sale starts tomorrow! Get ready for amazing discounts on all items. #springsale #discounts",
        time: "12:00"
      }
    ]
  };
  
  const countriesData = [
    {
      country: "United States",
      code: "us",
      audience: 4827,
      percentage: 35.2
    },
    {
      country: "Saudi Arabia",
      code: "sa",
      audience: 2105,
      percentage: 15.3
    },
    {
      country: "United Arab Emirates",
      code: "ae",
      audience: 1847,
      percentage: 13.5
    },
    {
      country: "Egypt",
      code: "eg",
      audience: 1526,
      percentage: 11.1
    },
    {
      country: "Qatar",
      code: "qa",
      audience: 926,
      percentage: 6.7
    },
    {
      country: "Kuwait",
      code: "kw",
      audience: 712,
      percentage: 5.2
    },
    {
      country: "Jordan",
      code: "jo",
      audience: 583,
      percentage: 4.2
    },
    {
      country: "Other",
      code: "xx",
      audience: 1200,
      percentage: 8.8
    }
  ];
  
  const handlePlatformDetail = (platform: string) => {
    console.log(`View detail for platform: ${platform}`);
  };
  
  const handlePostDetail = (post: any) => {
    console.log(`View detail for post: ${post.id}`);
  };
  
  return (
    <Tabs value={activeTab} onValueChange={setActiveTab} className="mb-6">
      <TabsList className="mb-4 w-full border-b border-gray-200 pb-0 bg-transparent overflow-x-auto scrollbar-hide flex md:flex-wrap whitespace-nowrap">
        <TabsTrigger 
          value="overview" 
          className="data-[state=active]:border-b-2 data-[state=active]:border-blue-500 data-[state=active]:text-blue-500 rounded-none bg-transparent px-3 md:px-4 py-2 text-sm md:text-base"
          onClick={() => setActiveTab("overview")}
        >
          {t('dashboard.overview')}
        </TabsTrigger>
        <TabsTrigger 
          value="audience" 
          className="data-[state=active]:border-b-2 data-[state=active]:border-blue-500 data-[state=active]:text-blue-500 rounded-none bg-transparent px-3 md:px-4 py-2 text-sm md:text-base"
          onClick={() => setActiveTab("audience")}
        >
          {t('dashboard.audience')}
        </TabsTrigger>
        <TabsTrigger 
          value="post-performance" 
          className="data-[state=active]:border-b-2 data-[state=active]:border-blue-500 data-[state=active]:text-blue-500 rounded-none bg-transparent px-3 md:px-4 py-2 text-sm md:text-base"
          onClick={() => setActiveTab("post-performance")}
        >
          {t('dashboard.postPerformance')}
        </TabsTrigger>
        <TabsTrigger 
          value="reel-performance" 
          className="data-[state=active]:border-b-2 data-[state=active]:border-blue-500 data-[state=active]:text-blue-500 rounded-none bg-transparent px-3 md:px-4 py-2 text-sm md:text-base"
          onClick={() => setActiveTab("reel-performance")}
        >
          {t('dashboard.reelPerformance')}
        </TabsTrigger>
        <TabsTrigger 
          value="story-performance" 
          className="data-[state=active]:border-b-2 data-[state=active]:border-blue-500 data-[state=active]:text-blue-500 rounded-none bg-transparent px-3 md:px-4 py-2 text-sm md:text-base"
          onClick={() => setActiveTab("story-performance")}
        >
          {t('dashboard.storyPerformance')}
        </TabsTrigger>
      </TabsList>
      
      <TabsContent value="overview">
        <div className="mb-4 bg-amber-50 border border-amber-200 rounded-md p-4 flex items-start">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-amber-500 mr-3 mt-0.5">
            <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
            <line x1="12" y1="9" x2="12" y2="13"></line>
            <line x1="12" y1="17" x2="12.01" y2="17"></line>
          </svg>
          <div>
            <h3 className="font-medium text-sm">{t('dashboard.learnHowToUse')}</h3>
            <p className="text-sm text-gray-600">{t('dashboard.trackYourPerformance')}</p>
          </div>
          <Button variant="ghost" size="sm" className="ml-auto">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
              <line x1="18" y1="6" x2="6" y2="18"></line>
              <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
          </Button>
        </div>
        
        {/* Stats Overview Section */}
        <StatsOverview stats={statsData} />
        
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4 md:gap-6 mb-6 md:mb-8">
          <div className="md:col-span-1">
            <ProfileSummary />
          </div>
          <div className="md:col-span-2 mt-4 md:mt-0">
            <SocialMediaInsights 
              platforms={platformStats} 
              onViewDetail={handlePlatformDetail} 
            />
          </div>
        </div>
        
        {/* World Map Analytics */}
        <WorldMap 
          countries={countriesData} 
          totalAudience={13726} 
        />
        
        {/* Post Scheduling */}
        <PostSchedule 
          posts={scheduledPosts} 
          onViewDetail={handlePostDetail} 
        />
        
        {/* Platform Insights */}
        <PostInsights 
          insights={platformInsights} 
          onViewDetail={handlePlatformDetail} 
        />
        
        <TopPerformingPosts />
      </TabsContent>
      
      <TabsContent value="audience">
        <div className="mb-6">
          <h2 className="text-xl font-medium mb-4">{t('dashboard.audienceTab')}</h2>
          
          {/* Stats Overview Section */}
          <StatsOverview stats={statsData} />
          
          {/* World Map Analytics */}
          <WorldMap 
            countries={countriesData} 
            totalAudience={13726} 
          />
          
          {/* Additional audience demographics would go here */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
            <Card>
              <CardContent className="p-6">
                <h3 className="text-lg font-medium mb-4">Age Distribution</h3>
                <div className="h-[250px] flex items-center justify-center">
                  <p className="text-gray-500">Age distribution chart will appear here</p>
                </div>
              </CardContent>
            </Card>
            <Card>
              <CardContent className="p-6">
                <h3 className="text-lg font-medium mb-4">Gender Distribution</h3>
                <div className="h-[250px] flex items-center justify-center">
                  <p className="text-gray-500">Gender distribution chart will appear here</p>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </TabsContent>
      
      <TabsContent value="post-performance">
        <div className="mb-6">
          <h2 className="text-xl font-medium mb-4">{t('dashboard.postPerformanceTab')}</h2>
          
          {/* Post Insights */}
          <PostInsights 
            insights={platformInsights} 
            onViewDetail={handlePlatformDetail} 
          />
          
          {/* Top Performing Posts */}
          <TopPerformingPosts />
        </div>
      </TabsContent>
      
      <TabsContent value="reel-performance">
        <div className="text-center py-10">
          <h3 className="text-xl font-medium mb-2">{t('dashboard.reelPerformanceTab')}</h3>
          <p className="text-gray-500">{t('dashboard.comingSoon')}</p>
        </div>
      </TabsContent>
      
      <TabsContent value="story-performance">
        <div className="text-center py-10">
          <h3 className="text-xl font-medium mb-2">{t('dashboard.storyPerformanceTab')}</h3>
          <p className="text-gray-500">{t('dashboard.comingSoon')}</p>
        </div>
      </TabsContent>
    </Tabs>
  );
}

export default function Dashboard() {
  const { t } = useTranslation();
  const [, setLocation] = useLocation();
  const [selectedAccount, setSelectedAccount] = useState("instagram");
  
  const handleUpgrade = () => {
    setLocation('/subscribe');
  };
  
  return (
    <>
      {/* Page title and account selector */}
      <div className="flex flex-col md:flex-row justify-between items-start md:items-center mb-6">
        <div>
          <h1 className="text-2xl font-bold mb-1">{t('dashboard.analyticsTitle')}</h1>
          <p className="text-neutral-500">{t('dashboard.analyticsSubtitle')}</p>
        </div>
        
        <div className="mt-4 md:mt-0">
          <Select value={selectedAccount} onValueChange={setSelectedAccount}>
            <SelectTrigger className="w-[200px]">
              <SelectValue>
                <div className="flex items-center">
                  {selectedAccount === "instagram" && (
                    <svg className="w-4 h-4 mr-2" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zM12 0C8.741 0 8.333.014 7.053.072 2.695.272.273 2.69.073 7.052.014 8.333 0 8.741 0 12c0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98C8.333 23.986 8.741 24 12 24c3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98C15.668.014 15.259 0 12 0zm0 5.838a6.162 6.162 0 100 12.324 6.162 6.162 0 000-12.324zM12 16a4 4 0 110-8 4 4 0 010 8zm6.406-11.845a1.44 1.44 0 100 2.881 1.44 1.44 0 000-2.881z" />
                    </svg>
                  )}
                  {selectedAccount === "facebook" && (
                    <svg className="w-4 h-4 mr-2" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z" />
                    </svg>
                  )}
                  {selectedAccount === "twitter" && (
                    <svg className="w-4 h-4 mr-2" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z" />
                    </svg>
                  )}
                  {selectedAccount === "instagram" ? "Instagram" : 
                   selectedAccount === "facebook" ? "Facebook" : 
                   selectedAccount === "twitter" ? "Twitter" : 
                   selectedAccount}
                </div>
              </SelectValue>
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="instagram">
                <div className="flex items-center">
                  <svg className="w-4 h-4 mr-2" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zM12 0C8.741 0 8.333.014 7.053.072 2.695.272.273 2.69.073 7.052.014 8.333 0 8.741 0 12c0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98C8.333 23.986 8.741 24 12 24c3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98C15.668.014 15.259 0 12 0zm0 5.838a6.162 6.162 0 100 12.324 6.162 6.162 0 000-12.324zM12 16a4 4 0 110-8 4 4 0 010 8zm6.406-11.845a1.44 1.44 0 100 2.881 1.44 1.44 0 000-2.881z" />
                  </svg>
                  Instagram
                </div>
              </SelectItem>
              <SelectItem value="facebook">
                <div className="flex items-center">
                  <svg className="w-4 h-4 mr-2" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z" />
                  </svg>
                  Facebook
                </div>
              </SelectItem>
              <SelectItem value="twitter">
                <div className="flex items-center">
                  <svg className="w-4 h-4 mr-2" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z" />
                  </svg>
                  Twitter
                </div>
              </SelectItem>
            </SelectContent>
          </Select>
        </div>
      </div>
      
      <AnalyticsTabs />
      
      {/* Connect section if no accounts */}
      <ConnectedPlatforms />
    </>
  );
}
